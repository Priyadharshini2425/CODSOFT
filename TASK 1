class ToDoList:
    def __init__(self):
        self.tasks = {}

    def add_task(self, task, due_date):
        self.tasks[task] = due_date
        print(f"Task '{task}' added successfully!")

    def delete_task(self, task):
        if task in self.tasks:
            del self.tasks[task]
            print(f"Task '{task}' deleted successfully!")
        else:
            print(f"Task '{task}' not found!")

    def update_task(self, task, new_task=None, new_due_date=None):
        if task in self.tasks:
            if new_task:
                self.tasks[new_task] = self.tasks.pop(task)
            if new_due_date:
                self.tasks[task] = new_due_date
            print(f"Task '{task}' updated successfully!")
        else:
            print(f"Task '{task}' not found!")

    def view_tasks(self):
        if self.tasks:
            print("To-Do List:")
            for task, due_date in self.tasks.items():
                print(f"Task: {task}, Due Date: {due_date}")
        else:
            print("To-Do List is empty!")


def main():
    todo_list = ToDoList()

    while True:
        print("\n1. Add Task")
        print("2. Delete Task")
        print("3. Update Task")
        print("4. View Tasks")
        print("5. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            task = input("Enter task: ")
            due_date = input("Enter due date: ")
            todo_list.add_task(task, due_date)
        elif choice == "2":
            task = input("Enter task to delete: ")
            todo_list.delete_task(task)
        elif choice == "3":
            task = input("Enter task to update: ")
            new_task = input("Enter new task (press enter to skip): ")
            new_due_date = input("Enter new due date (press enter to skip): ")
            todo_list.update_task(task, new_task or None, new_due_date or None)
        elif choice == "4":
            todo_list.view_tasks()
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()
